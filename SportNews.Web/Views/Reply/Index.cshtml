@model SportNews.Web.ViewModels.ReplyViewModel

@{
    ViewData["Title"] = "Index";
}

@*<table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Content)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedOn)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Post)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Author)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Content)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedOn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Post.ID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author.Id)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
    }
        </tbody>
    </table>*@
<div id="container">
    @*<div class="col-xs-5 col-sm-2 col-lg-2">
            <div class="thumbnail">
                <img src="@String.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(@Model.Post.Author.Avatar))" alt="Notebook" style="width:100%;">
            </div>
            <div>

                <h3>@Model.Post.Title</h3>
                by <h4>@Model.Post.Author</h4>
            </div>
        </div>*@
    <div class="container-fluid">
        <div class="row" style="margin-bottom: 17px;">
            <div class="col-xs-6 col-sm-4 col-lg-1"><img src="@String.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(@Model.Post.Author.Avatar))" alt="Notebook" style="width:100%;"></div>
            <div class="col-xs-6 col-sm-8 col-lg-10">
                <strong style="font-size: 17px;">@Model.Post.Title</strong>
                <p>by @Model.Post.Author</p>
            </div>
        </div>
    </div>

    <p>
        @*<a asp-route-postid="@Model.Post.ID" onclick="showDiv()" class="float-right btn btn-outline-primary ml-2"><i class="fa fa-reply"></i> Reply</a>*@
        <button asp-action="Create" class="btn btn-default" style="float:right; margin-bottom: 7px; margin-right: 10px; color: white; background-color: royalblue" onclick="showDiv()"><i class="fa fa-reply"></i> Reply</button>
    </p>

    @foreach (var item in Model.Replies.OrderByDescending(r => r.CreatedOn))
    {
        <div style="display: inline-grid; padding: 10px 10px 5px; background-color: #F8F8F8; width: 100%">
            <div style="background-color: white; border: 1px solid; border-color: gainsboro; border-radius: 3px">
                <article>

                    <ul class="col-xs-5 col-sm-2 col-lg-2" style="text-align: center; margin: 5px 0 5px;">
                        <li class="thumbnail">
                            <img class="media-object" src="@String.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(item.Author.Avatar))" alt="Notebook" style="width:100%;">
                        </li>
                        <li style="word-break: break-word;">
                            @item.Author.UserName
                        </li>
                        <li>
                            Коментари: @Model.Replies.Where(r => r.AuthorID == item.AuthorID).Count()
                        </li>
                    </ul>

                    <div class="col-xs-7 col-sm-6 col-lg-8">
                        <div>
                            <p style="color: #808080; padding: 20px 0 10px"><i class="fa fa-clock-o" style="padding-right: 5px"></i>@item.CreatedOn<p>
                        </div>
                        <div>
                            @Html.Raw(@item.Content)
                        </div>
                        <div style="border-top-color: #ECF0F1; margin-top: 15px; padding-top: 15px; border-top: 1px solid #808080">
                            This is a signature
                        </div>
                    </div>

                </article>
            </div>
        </div>
        <style>
            .thumbnail {
                padding: 0px;
            }

            .panel {
                position: relative;
            }

                .panel > .panel-heading:after, .panel > .panel-heading:before {
                    position: absolute;
                    top: 11px;
                    left: -16px;
                    right: 100%;
                    width: 0;
                    height: 0;
                    display: block;
                    content: " ";
                    border-color: transparent;
                    border-style: solid solid outset;
                    pointer-events: none;
                }

                .panel > .panel-heading:after {
                    border-width: 7px;
                    border-right-color: #f7f7f7;
                    margin-top: 1px;
                    margin-left: 2px;
                }

                .panel > .panel-heading:before {
                    border-right-color: #ddd;
                    border-width: 8px;
                }
        </style>

        @*<div class="row" >
            <div class="col-xs-5 col-sm-2 col-lg-2">
                <div class="avatar">
                    <img src="@String.Format("data:image/jpg;base64,{0}", Convert.ToBase64String(item.Author.Avatar))" alt="Notebook" style="width:100%;">
                </div><!-- /thumbnail -->
                <div style="text-align: center; font-size: 12px">Коментари: @Model.Replies.Where(r => r.AuthorID == item.AuthorID).Count()</div>
            </div><!-- /col-sm-1 -->
            <div class="col-xs-7 col-sm-6 col-lg-10">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <strong>@item.Author.UserName</strong>*@
        @*<p>
                <a class="float-right btn btn-outline-primary ml-2">  <i class="fa fa-reply"></i> Reply</a>
                <a class="float-right btn text-white btn-danger"> <i class="fa fa-heart"></i> Like</a>
            </p>*@
        @*</div>
                        <div class="panel-body">
                            <span class="text-muted"><i class="fa fa-clock-o" style="padding-right: 5px"></i>@item.CreatedOn</span>
                            <p style="margin-top: 15px">@Html.Raw(@item.Content)</p>

                        </div><!-- /panel-body -->
                    </div><!-- /panel panel-default -->
                </div><!-- /col-sm-5 -->
            </div><!-- /row -->*@
    }
</div>
@*<div id="welcomeDiv" class="form-group" style="display:none;">
        <label asp-for="Content" class="control-label"></label>
        <textarea class="form-control" name="Content" rows="10"></textarea>
        <span asp-validation-for="Content" class="text-danger"></span>
    </div>

    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-default" onclick="location.href='@Url.Action("Create", "Reply")'" />
        <a asp-action="Create">aaaaaaaa</a>
    </div>*@

@*<div id="welcomeDiv" style="display:none;">
    <form asp-action="Create" asp-route-postid="@Model.Post.ID" asp-route-authorid="@Model.Post.AuthorID" asp-route-returnUrl="@ViewData["ReturnUrl"]">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="Content" class="control-label"></label>
            <textarea class="form-control" name="Content" rows="10"></textarea>
            <span asp-validation-for="Content" class="text-danger"></span>
        </div>
        @Html.HiddenFor(model => model.Post.ID)
        @Html.HiddenFor(model => model.Post)
        @Html.HiddenFor(model => model.Post.AuthorID)
        @Html.HiddenFor(model => model.Post.Author)
        <div class="form-group">
            <input type="submit" value="Reply" class="btn btn-default" />
        </div>
    </form>
</div>*@
<form asp-action="Create" asp-route-postid="@Model.Post.ID" asp-route-authorid="@Model.Post.AuthorID" asp-route-returnUrl="@Url.Page("/Reply", new { PostID = 2 })" >
    <div id="welcomeDiv" class="form-group" style="display:none;">
    <partial name="Comment" />
</div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


